## Creting a function to catch the inverse of a matrix, through creating a special "matrix" object that can cache the inverse

makeCacheMatrix <- function(x = matrix()){
    inv <- NULL
    set <- function(y){
        x <<- y
        inv <<- NULL
    }
    get <- function() x
    setInverse <- function(solveMatrix)
        inv <<- solveMatrix
    getInverse <- function()inv
    list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}

## Function that would calculate the inverse of the special "matrix".
cacheSolve <- function(x, ...) {
## Returning an inverse matrix    
    inv <- x$getInverse()
    if(!is.null(inv)){
        message("Getting cached data!")
        return(inv)
    }
    data <- x$get()
    inv <- solve(data)
    x$setInverse(inv)
    inv
}
